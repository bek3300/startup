# Generated by Django 4.1.7 on 2023-05-12 13:58

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=30, verbose_name='Country')),
                ('phone_number', models.IntegerField(verbose_name='Phone Number')),
                ('city_name', models.CharField(max_length=30, verbose_name='City Name')),
                ('website', models.CharField(max_length=30, verbose_name='Website')),
            ],
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('description', models.TextField(max_length=1000, verbose_name='Description')),
                ('sector', models.CharField(choices=[('Entertainment', 'Entertainment'), ('Energy', 'Energy'), ('Logistics', 'Logistics'), ('Construction', 'Construction'), ('Education', 'Education'), ('Health', 'Health'), ('Manufacturing', 'Manufacturing'), ('Cleaning', 'Cleaning'), ('Education', 'Education'), ('Finance', 'Finance'), ('Tourism', 'Tourism'), ('IT', 'IT'), ('Agriculture', 'Agriculture'), ('Other', 'Other')], max_length=50, verbose_name='Sector')),
                ('other_sector', models.CharField(blank=True, max_length=30, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logo/startup')),
            ],
        ),
        migrations.CreateModel(
            name='EthRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(choices=[('Addis Ababa', 'Addis Ababa'), ('Afar', 'Afar'), ('Amhara', 'Amhara'), ('Benishangul-Gumuz', 'Benishangul-Gumuz'), ('Dire Dawa', 'Dire Dawa'), ('Gambela', 'Gambela'), ('Harari', 'Harari'), ('Oromia', 'Oromia'), ('Somali', 'Somali'), ('Sidama', 'Sidama '), ('South West Peoples', 'South West'), ('SNNP', 'SNNP'), ('Tigray', 'Tigray')], max_length=50, unique=True, verbose_name='Region')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middile_name', models.CharField(max_length=15, verbose_name='Middile Name')),
                ('birth_date', models.DateField(verbose_name='Birth Date')),
                ('profile_pic', models.ImageField(upload_to='user_pic/%Y/%m/%d', validators=[main.models.validate_image], verbose_name='Profile Picture')),
                ('contact', models.CharField(max_length=15, verbose_name='Contact')),
                ('secondary_email', models.EmailField(max_length=150, verbose_name='Alternate Email')),
                ('gender', models.IntegerField(choices=[(0, 'Male'), (1, 'Female')], default=0, verbose_name='Sex/Gender')),
                ('modified', models.DateTimeField(auto_now=True)),
                ('friends', models.ManyToManyField(blank=True, to='main.profile')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='auth.group')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Wereda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wereda_name', models.CharField(max_length=30, verbose_name='Wereda')),
                ('regionId', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='wereda', to='main.ethregion', verbose_name='Region')),
            ],
        ),
        migrations.CreateModel(
            name='Startup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('establishment_year', models.DateField(verbose_name='Establishment Year')),
                ('market_scope', models.CharField(choices=[('Domestic', 'Domestic'), ('International', 'International')], max_length=50, verbose_name='Market Scope')),
                ('stage', models.CharField(choices=[('pre start-up( early-stage)', 'pre start-up( early-stage)'), ('mid start-up', 'mid start-up'), ('in-market', 'in-market')], max_length=50, verbose_name='Stage')),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='startup_address', to='main.address')),
                ('description', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='startup_description', to='main.description')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='startup_profile', to='main.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('educational_level', models.CharField(choices=[('no_formal_education', 'No formal education'), ('primary_education', 'Primary education'), ('secondary_education_or_high_school', 'Secondary education or high school'), ('vocational_qualification', 'Vocational qualification'), ('bachelors_degree', 'Bachelors degree'), ('masters_degree', 'Masters degree'), ('doctorate_or_higher', 'Doctorate or higher'), ('other', 'Other')], max_length=50, verbose_name='Educational Level')),
                ('educational_level_other', models.CharField(blank=True, max_length=50, null=True, verbose_name='Specify Other Level')),
                ('educational_background', models.CharField(choices=[('arts_and_humanities', 'Arts and humanities'), ('business_and_management', 'Business and management'), ('computer_science', 'Computer science'), ('education', 'Education'), ('engineering', 'Engineering'), ('health', 'Health'), ('law', 'Law'), ('social_sciences', 'Social sciences'), ('natural_sciences', 'Natural sciences'), ('other', 'Other')], max_length=50, verbose_name='Educational Background')),
                ('educational_background_other', models.CharField(blank=True, max_length=50, null=True, verbose_name='Specify Other Background')),
                ('mentor_area', models.CharField(choices=[('legal_advice', 'legal advice'), ('business_model', 'business model'), ('innovation_management', 'innovation management'), ('intellectual_property', 'intellectual property'), ('other', 'Other')], max_length=50, verbose_name='Mentor Area')),
                ('mentor_area_other', models.CharField(blank=True, max_length=50, null=True, verbose_name='Specify Other Area')),
                ('airelated_expriance', models.CharField(blank=True, max_length=50, null=True, verbose_name='AI Related Experience')),
                ('attachments', models.FileField(blank=True, help_text='please upload relevant documents max 10', null=True, upload_to='mentor/attachments', verbose_name='Attachment')),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='mentor_address', to='main.address')),
                ('description', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='mentor_description', to='main.description')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.profile')),
            ],
        ),
        migrations.CreateModel(
            name='IncubatorsAccelatorsHub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(choices=[('Acceleration', 'Acceleration'), ('Incubation', 'Incubation'), ('Hub', 'Hub')], max_length=50, verbose_name='Service')),
                ('ownership', models.CharField(choices=[('Private', 'Private'), ('Public', 'Public'), ('NGO', 'NGO'), ('Government', 'Government'), ('Other', 'Other')], max_length=50, verbose_name='Owner Ship')),
                ('ownership_other', models.CharField(blank=True, max_length=50, null=True)),
                ('focusIndustry', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), default=list, size=None, verbose_name='Focus Industry')),
                ('level', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), default=list, size=20, verbose_name='Level')),
                ('funded_by', models.CharField(choices=[('self_', 'self'), ('government', 'government'), ('nGO', 'NGO'), ('grant', 'Grant'), ('International', 'International'), ('Other', 'Other')], max_length=50, verbose_name='Funded By')),
                ('funded_by_other', models.CharField(max_length=50)),
                ('program_duration', models.CharField(blank=True, choices=[('less_than_3_month', 'less than 3 month'), ('3_to_6_months', '3 to 6 months'), ('6_months_to_a_year', '6 months to a year'), ('1_year_to_two_years', '1 year to two years'), ('International', 'International')], max_length=50, null=True, verbose_name='Program Duration')),
                ('attachments', models.FileField(blank=True, help_text='please upload relevant documents max 10', null=True, upload_to='incubetor/attachments')),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='iha_address', to='main.address')),
                ('description', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='iha_description', to='main.description')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='iha_address', to='main.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Goveroment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goveroment_type', models.CharField(choices=[('ministry_offices', 'Ministry offices'), ('universities', 'Universities'), ('Other', 'Other')], max_length=50, verbose_name='Government type')),
                ('goveroment_type_other', models.CharField(max_length=50)),
                ('level', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), default=list, size=20)),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='goveroment_address', to='main.address')),
                ('description', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='goveroment_description', to='main.description')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='main.profile')),
            ],
        ),
        migrations.CreateModel(
            name='DonorFunder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doner_type', models.CharField(choices=[('self_', 'self'), ('government', 'government'), ('nGO', 'NGO'), ('grant', 'Grant'), ('International', 'International'), ('Other', 'Other')], max_length=50, verbose_name='Donor Type')),
                ('doner_type_by_other', models.CharField(blank=True, max_length=50, null=True)),
                ('level', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=500), default=list, size=20, verbose_name='Level')),
                ('investment_type', models.CharField(choices=[('selection', 'selection'), ('finance', 'finance'), ('working_space', 'working space'), ('material', 'material'), ('Other', 'Other')], max_length=50, verbose_name='Investment Type')),
                ('investment_type_other', models.CharField(blank=True, max_length=50, null=True)),
                ('maxInvestRange', models.CharField(blank=True, max_length=100, null=True, verbose_name='Investment Range')),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='donor_address', to='main.address')),
                ('description', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='donor_description', to='main.description')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='donor_profile', to='main.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Connect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'Accepted'), (3, 'Rejected')], default=1)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_user', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='address',
            name='location',
            field=models.OneToOneField(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='location', to='main.wereda', verbose_name='Wereda'),
        ),
    ]
